#https://leetcode-cn.com/problems/perfect-squares/
#不能用贪心，12=9+3=9+1+1+1
#和为n的完全平方数的最多数量即为n，因为n=1+1+1+..+1, n个1相加
#类似零钱兑换问题

class Solution:
    def numSquares(self, n: int) -> int:
        dp = [0]*(n+1)
        for i in range(1, n+1):
            minn = n
            j=1
            while j*j<=i:
                minn = min(minn, dp[i-j*j])
                j = j+1
            dp[i] = minn+1






#https://leetcode-cn.com/problems/jump-game/
class Solution:
    def canJump(self, nums: List[int]) -> bool:
        n, rightmost = len(nums), 0
        for i in range(n):
            if i <= rightmost:      #这个判断保证i本身是可达的
                rightmost = max(rightmost, i + nums[i])
                if rightmost >= n - 1:
                    return True
        return False